library(XML)
library(RSQLite)
library(dplyr)
fpath <- "./"
dbfile <- "practicum2_group3.db"
xmlfile <- "pubmed_sample.xml"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
#dbExecute(dbcon, "PRAGMA foreign_keys = ON")
dbListTables(dbcon)
library(XML)
library(RSQLite)
library(dplyr)
fpath <- "./"
dbfile <- "practicum2_group3.db"
xmlfile <- "pubmed_sample.xml"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
#dbExecute(dbcon, "PRAGMA foreign_keys = ON")
dbListTables(dbcon)
library(XML)
library(RSQLite)
library(dplyr)
fpath <- "./"
dbfile <- "practicum2_group3.db"
xmlfile <- "pubmed_sample.xml"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
#dbExecute(dbcon, "PRAGMA foreign_keys = ON")
dbListTables(dbcon)
install.packages(c("blob", "cachem", "cli", "commonmark", "dplyr", "fastmap", "ggplot2", "gtable", "htmltools", "markdown", "pillar", "processx", "ps", "rlang", "rmarkdown", "RSQLite", "styler", "tibble", "tinytex", "vctrs", "xfun"))
install.packages(c("lattice", "Matrix"), lib="/usr/local/Cellar/r/4.2.3/lib/R/library")
library(XML)
library(RSQLite)
library(dplyr)
fpath <- "./"
dbfile <- "practicum2_group3.db"
xmlfile <- "pubmed_sample.xml"
# if database file already exists, we connect to it, otherwise
# we create a new database
dbcon <- dbConnect(RSQLite::SQLite(), paste0(fpath,dbfile))
#dbExecute(dbcon, "PRAGMA foreign_keys = ON")
dbListTables(dbcon)
